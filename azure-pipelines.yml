# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

# pool:
#   vmImage: 'ubuntu-latest'
# strategy:
#   matrix:
#     linux:
#       operatingSystem: 'ubuntu-latest'
#     mac:
#       operatingSystem: 'macos-latest'
pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - bash: |
        echo "Do the BuildJob"

- stage: DevDeploy
  jobs: 
  - deployment: DevDeployJob
    environment: Dev
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "Deploy to Dev"

- stage: QADeploy
  jobs: 
  - deployment: QADeployJob
    environment: QA
    strategy:
      runOnce:
        deploy:
          steps:
          - script: echo "Deploy to QA"


      


       




# steps:
# - script: echo Running on $(operatingSystem)
#   displayName: 'Run a one-line script'


        

# stages:
# - stage: build
#   jobs:
#   - job: FirstJob
#     steps:
#     - bash: |
#         echo "Build FirstJob"

#     - bash: |
#         echo $(PipelineLevelVariable)

#     - bash: |
#         echo $(Build.BuildNumber)

#     - bash: |
#         echo $(Build.BuildId)

#     - bash: |
#         echo $(Build.SourceBranchName)

#     - bash: |
#         echo $(Build.SourcesDirectory)

#     - bash: |
#         echo $(System.DefaultWorkingDirectory)

#     - bash: |
#         ls -R $(System.DefaultWorkingDirectory)

#     - bash: |
#         echo $(Build.ArtifactStagingDirectory)

#     - bash: |
#         java -version
#         node --version
#         python3 --version
#         mvn -version

#     - bash: |
#         ls -R '$(Build.ArtifactStagingDirectory)'

#     - task: CopyFiles@2
#       inputs:
#         SourceFolder: '$(System.DefaultWorkingDirectory)'
#         Contents: |
#           **/*.yaml
#           **/*.tf
#         TargetFolder: '$(Build.ArtifactStagingDirectory)'
#     - task: PublishBuildArtifacts@1
#       inputs:
#         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#         ArtifactName: 'drop'
#         publishLocation: 'Container'

       

  # - job: SecondJob
  #   steps:
  #   - bash: |
  #       echo Build SecondJob
# - stage: Devdeploy
#   variables:
#     environment: Dev
#   jobs:
#   - job: DevdeployJob
#     steps:
#     - bash: |
#         echo Build $(environment)deployJob
# - stage: QAdeploy
#   variables:
#     environment: QA
#   jobs:
#   - job: QAdeployJob
#     steps:
#     - bash: |
#         echo Build $(environment)deployJob
# - stage: Proddeploy
#   variables:
#     environment : Prod
#   jobs:
#   - job: ProddeployJob
#     steps:
#     - bash: |
#         echo Build $(environment)deployJob
#         echo "This is Proddeploy stage"

# Pipelines > Stages > Jobs > Tasks(Steps)

#jobs:
#- job: job1
#  steps:
  #- script: echo job1 -  Hello, world,Changed!
   # displayName: 'Run a one-line script'
   
  #- script: |
      # echo Add other tasks to build, test, and deploy your project.
      # echo See https://aka.ms/yaml
      # echo This is a multi-line script.
    #displayName: 'Run a multi-line script'
# -  job: job2
   # dependsOn: job1
   # steps:
   # - script: echo job2!
     #displayName: 'Run a one-line script'
# -  job: job3
   # dependsOn: job1
   #steps:
   # - script: echo job3!
     # displayName: 'Run a one-line script'
# -  job: Job4
   #dependsOn:
   # - job2
   # - job3
   #steps:
   #- script: echo job3!
     # displayName: 'Run a one-line script'

